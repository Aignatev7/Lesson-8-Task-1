#include <iostream>
#include <windows.h>						   //библиотека windows.h позволяет взаимодействовать с ОС и вызывать определенные системные команды

int function(std::string str, int forbidden_length) {
	int len = str.length();
	
	if (len != forbidden_length) {
		return len;
	}
	throw "bad_length";
}

int main() {
	SetConsoleCP(1251);							//устанавливает кодировку ввода из консоли и из редактора кода
	SetConsoleOutputCP(1251);					//устанавливает кодировку вывода на консоль
	int forbidden_length;
	std::string str;
	std::cout << "Введите запретную длину: ";
	std::cin >> forbidden_length;

	do {
		std::cout << "Введите слово: ";
		std::cin >> str;

		try
		{
			std::cout << "Длина слова " << "''" << str << "''" << " равна " << function(str, forbidden_length) << std::endl;
		}
		catch (const std::string* as)
		{
			{ std::cout << "Вы ввели слово запретной длины! До свидания" << std::endl; }
		}

	} while (function(str, forbidden_length) != forbidden_length);

}




/*
Задача 1. Простое исключение
В этом задании вы попробуете выбросить и обработать исключение.

Создайте функцию int function(std::string str, int forbidden_length).Эта функция должна возвращать длину переданной строки, если эта длина не равна значению переданного параметра forbidden_length.В противном случае она должна выбрасывать исключение bad_length.

Для проверки функции организуйте работу с пользователем.В начале задайте запретную длину, а затем считывайте пользовательские строки и выводите их длину до тех пор, пока пользователь не введёт строку запретной длины.После этого сообщите ему, что он ввёл строку запретной длины, и завершите программу.

Пример работы программы
Консоль
Введите запретную длину : 5
Введите слово : Привет
Длина слова "Привет" равна 6
Введите слово : мир
Длина слова "мир" равна 3
Введите слово : пирог
Вы ввели слово запретной длины!До свидания
Подсказки
Не читайте этот раздел сразу.Попытайтесь сначала решить задачу самостоятельно : )

Что использовать для решения.
Для вычисления длины строки используйте метод класса std::string — length.

Для создания исключения используйте ключевое слово throw.

Для ожидания исключения используйте ключевое слово try.

Для обработки исключения используйте ключевое слово catch.
*/